/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.entornos;


import jakarta.persistence.EntityManager;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;


/**
 *
 * @author Medac
 */
public class CVvivienda extends javax.swing.JFrame {

    /**
     * Creates new form CVvivienda
     */
    public CVvivienda() {
        initComponents();
        vivienda=null;
        this.tfDireccion.setText(CVvivienda.SIN_DIRECCION);
        this.tfReferencia.setText(CVvivienda.SIN_REFERENCIA);
       
    }
    
    public CVvivienda(EntityManager manager) {
        initComponents();
        
        this.manager = manager;
        
        this.vivienda = new Cvivienda();
        
        this.viviendas = null;
        
        this.modificando = false;
        
        this.nuevo = false;
        
        this.indice = 0;
                
        // bloqueo campos para evitar cambios accidentales
        this.bloqueaCampos(modificando);
        
                
        //pongo los textos por defecto en los botones
        this.cambiaTextoBotones(modificando); 
        
        //Carga base de datos
        this.cargaDatos();
                
        if (this.viviendas.size()>0)  
        {                    
            //cargo el primer cliente
            this.vivienda = this.viviendas.get(indice);
        
        }else
        {
            this.vivienda = new Cvivienda();
                
        }
        
        // Relleno todos campos para mostrarlos en pantalla
        this.cargaValores();
        
    }
    
    public CVvivienda(EntityManager manager, Cvivienda vivienda, boolean modificando) {
        initComponents();
        
        this.manager = manager;
        
        this.indice=0;
        
        this.vivienda=vivienda; 
        
        this.viviendas = null;
               
        this.modificando=modificando;
        
        
        // Relleno todos campos para mostrarlos en pantalla
        this.cargaValores(this.vivienda);
        
        // bloqueo campos para evitar cambios accidentales
        this.bloqueaCampos(modificando);
        
        //pongo los textos por defecto en los botones
        this.cambiaTextoBotones(modificando);
        
        //Carga base de datos
        this.cargaDatos();
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jDialog3 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        panelPie = new javax.swing.JPanel();
        btBorrar = new javax.swing.JButton();
        btNuevo = new javax.swing.JButton();
        btGuadar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        panelCabecera = new javax.swing.JPanel();
        lbTItulo = new javax.swing.JLabel();
        panelCuerpo = new javax.swing.JPanel();
        lbPrecio = new javax.swing.JLabel();
        lbReferencia = new javax.swing.JLabel();
        lbHabitaciones = new javax.swing.JLabel();
        jlbBanyos = new javax.swing.JLabel();
        spBanyos = new javax.swing.JSpinner();
        spHabitaciones = new javax.swing.JSpinner();
        tfReferencia = new javax.swing.JTextField();
        lbMetros = new javax.swing.JLabel();
        spMetros = new javax.swing.JSpinner();
        lbDireccion = new javax.swing.JLabel();
        tfDireccion = new javax.swing.JTextField();
        lbAlquilada = new javax.swing.JLabel();
        spPrecio = new javax.swing.JSpinner();
        panelBusqueda = new javax.swing.JPanel();
        btAnterior = new javax.swing.JButton();
        btBuscar = new javax.swing.JButton();
        btSiguiente = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Datos Vivienda");

        btBorrar.setForeground(new java.awt.Color(204, 0, 51));
        btBorrar.setText("Borrar");
        btBorrar.setToolTipText("Borra el registro actual");
        btBorrar.setName(""); // NOI18N
        btBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btBorrarMouseClicked(evt);
            }
        });
        panelPie.add(btBorrar);

        btNuevo.setText("Nuevo");
        btNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoActionPerformed(evt);
            }
        });
        panelPie.add(btNuevo);

        btGuadar.setText("Modficar");
        btGuadar.setNextFocusableComponent(btCancelar);
        btGuadar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btGuadarMouseClicked(evt);
            }
        });
        btGuadar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuadarActionPerformed(evt);
            }
        });
        panelPie.add(btGuadar);

        btCancelar.setText("Salir");
        btCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btCancelarMouseClicked(evt);
            }
        });
        panelPie.add(btCancelar);

        getContentPane().add(panelPie, java.awt.BorderLayout.SOUTH);

        lbTItulo.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        lbTItulo.setText("Datos Vivienda");
        lbTItulo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 18))); // NOI18N
        panelCabecera.add(lbTItulo);

        getContentPane().add(panelCabecera, java.awt.BorderLayout.PAGE_START);

        lbPrecio.setText("Precio alquiler");

        lbReferencia.setLabelFor(tfReferencia);
        lbReferencia.setText("Referencia");

        lbHabitaciones.setLabelFor(spHabitaciones);
        lbHabitaciones.setText("Habitaciones");

        jlbBanyos.setLabelFor(jlbBanyos);
        jlbBanyos.setText("Baños");

        spBanyos.setToolTipText("Nº de baños.");
        spBanyos.setNextFocusableComponent(btGuadar);

        spHabitaciones.setToolTipText("Nº de habitaciones");
        spHabitaciones.setEditor(new javax.swing.JSpinner.NumberEditor(spHabitaciones, ""));
        spHabitaciones.setNextFocusableComponent(spMetros);

        tfReferencia.setToolTipText("Referencia del inmueble");
        tfReferencia.setName(""); // NOI18N
        tfReferencia.setNextFocusableComponent(spPrecio);
        tfReferencia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfReferenciaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfReferenciaFocusLost(evt);
            }
        });

        lbMetros.setText("Metros Cuadrados");

        spMetros.setToolTipText("Superficie habitable en m2.");
        spMetros.setNextFocusableComponent(spBanyos);

        lbDireccion.setText("Dirección");

        tfDireccion.setText("Direcccion");
        tfDireccion.setToolTipText("Direccion del inmueble");
        tfDireccion.setNextFocusableComponent(spHabitaciones);
        tfDireccion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDireccionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfDireccionFocusLost(evt);
            }
        });

        lbAlquilada.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        lbAlquilada.setText("Disponible");
        lbAlquilada.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        spPrecio.setToolTipText("Precio del alquiler");
        spPrecio.setNextFocusableComponent(tfDireccion);

        btAnterior.setText("<");
        btAnterior.setToolTipText("Anterior");
        btAnterior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAnteriorMouseClicked(evt);
            }
        });

        btBuscar.setText("Buscar");
        btBuscar.setToolTipText("Buscar cliente");
        btBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btBuscarMouseClicked(evt);
            }
        });

        btSiguiente.setText(">");
        btSiguiente.setToolTipText("Posterior");
        btSiguiente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btSiguienteMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelBusquedaLayout = new javax.swing.GroupLayout(panelBusqueda);
        panelBusqueda.setLayout(panelBusquedaLayout);
        panelBusquedaLayout.setHorizontalGroup(
            panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 147, Short.MAX_VALUE)
            .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelBusquedaLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(btAnterior)
                    .addGap(5, 5, 5)
                    .addComponent(btBuscar)
                    .addGap(5, 5, 5)
                    .addComponent(btSiguiente)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        panelBusquedaLayout.setVerticalGroup(
            panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
            .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelBusquedaLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(panelBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btAnterior)
                        .addComponent(btBuscar)
                        .addComponent(btSiguiente))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout panelCuerpoLayout = new javax.swing.GroupLayout(panelCuerpo);
        panelCuerpo.setLayout(panelCuerpoLayout);
        panelCuerpoLayout.setHorizontalGroup(
            panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCuerpoLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbDireccion)
                    .addComponent(lbReferencia))
                .addGap(19, 19, 19)
                .addGroup(panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCuerpoLayout.createSequentialGroup()
                        .addGroup(panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfDireccion, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCuerpoLayout.createSequentialGroup()
                                .addComponent(tfReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(spPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelCuerpoLayout.createSequentialGroup()
                                .addComponent(lbAlquilada)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(panelBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(41, 41, 41))
                    .addGroup(panelCuerpoLayout.createSequentialGroup()
                        .addGroup(panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbHabitaciones)
                            .addGroup(panelCuerpoLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(spHabitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(164, 164, 164)
                        .addGroup(panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCuerpoLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(spMetros))
                            .addComponent(lbMetros))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                        .addGroup(panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbBanyos)
                            .addComponent(spBanyos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(141, 141, 141))))
        );
        panelCuerpoLayout.setVerticalGroup(
            panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCuerpoLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbAlquilada)
                    .addComponent(panelBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbReferencia)
                    .addComponent(spPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDireccion))
                .addGap(20, 20, 20)
                .addGroup(panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbHabitaciones)
                    .addComponent(lbMetros)
                    .addComponent(jlbBanyos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spHabitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spMetros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spBanyos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jlbBanyos.getAccessibleContext().setAccessibleName("lbBanyod");
        spBanyos.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));
        spHabitaciones.setModel(new javax.swing.SpinnerNumberModel(1, 1, 15, 1));
        spHabitaciones.getAccessibleContext().setAccessibleName("Habitaciones");
        tfReferencia.getAccessibleContext().setAccessibleName("tfReferencia");
        spMetros.setModel(new javax.swing.SpinnerNumberModel(30, 30, 1000, 5));
        spPrecio.setModel(new javax.swing.SpinnerNumberModel(100, 100, 5000, 50));

        getContentPane().add(panelCuerpo, java.awt.BorderLayout.LINE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btGuadarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btGuadarMouseClicked
        
        if(!this.modificando)
        {
            // Activo la marca que me permite saber si estoy modificando
            this.modificando=true;

            //  desbloqueo los campos del formulario
            this.bloqueaCampos(modificando);
            
            this.cambiaTextoBotones(modificando);
        
        }else{
            
            if( this.compruebaCampo(this.tfReferencia, CVvivienda.SIN_REFERENCIA)&&
                this.compruebaCampo(this.tfDireccion,CVvivienda.SIN_DIRECCION)&&
                this.compruebaCampo(this.spBanyos, CVvivienda.HABITACIONES_MINIMAS)&&
                this.compruebaCampo(this.spHabitaciones, CVvivienda.HABITACIONES_MINIMAS)&&
                this.compruebaCampo(this.spMetros, CVvivienda.HABITACIONES_MINIMAS)&&
                this.compruebaCampo(this.spPrecio,CVvivienda.PRECIO_MINIMO))
            {
                this.grabaRegistro();
                this.modificando = false;
                this.nuevo = false;
                this.cambiaTextoBotones(modificando);
                this.bloqueaCampos(modificando);
                this.cargaDatos();
            }
            
        }
        
        
    }//GEN-LAST:event_btGuadarMouseClicked

    private void btCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btCancelarMouseClicked
        
        if (this.modificando)
        {
            this.modificando=!this.modificando;
            cargaValores();
            this.bloqueaCampos(modificando);
            this.cambiaTextoBotones(modificando);
            
        }else
            this.dispose();
            
    }//GEN-LAST:event_btCancelarMouseClicked

    private void btGuadarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuadarActionPerformed
        
        
    }//GEN-LAST:event_btGuadarActionPerformed

    private void btBorrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btBorrarMouseClicked
        
        int opcion = JOptionPane.showConfirmDialog(this,this.TEXTO_BORRAR, TITULO_MENSAJE,JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        
        if (opcion != JOptionPane.YES_OPTION)
            return;
        
        JOptionPane.showMessageDialog(this,"Campo borrado", TITULO_MENSAJE, JOptionPane.INFORMATION_MESSAGE);
           
        int indice = this.viviendas.lastIndexOf(this.vivienda);
        
        if(indice >= 0)
        {
            this.viviendas.remove(indice);
        }
            
        this.vivienda= new Cvivienda();
        this.cargaValores();
    }//GEN-LAST:event_btBorrarMouseClicked

    private void tfDireccionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfDireccionFocusLost

        if (tfDireccion.getText().isEmpty())
        {
            tfDireccion.setText(CVvivienda.SIN_DIRECCION);
        }

    }//GEN-LAST:event_tfDireccionFocusLost

    private void tfDireccionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfDireccionFocusGained

        if (CVvivienda.SIN_DIRECCION.equals(tfDireccion.getText()))
        {
            tfDireccion.setText("");
        }
    }//GEN-LAST:event_tfDireccionFocusGained

    private void tfReferenciaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfReferenciaFocusLost

        if (tfReferencia.getText().isEmpty())
        {
            tfReferencia.setText(CVvivienda.SIN_REFERENCIA);
        }
    }//GEN-LAST:event_tfReferenciaFocusLost

    private void tfReferenciaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfReferenciaFocusGained

        if (CVvivienda.SIN_REFERENCIA.equals(tfReferencia.getText()))
        {
            tfReferencia.setText("");
        }
    }//GEN-LAST:event_tfReferenciaFocusGained

    private void btAnteriorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAnteriorMouseClicked

        // si no hay datos, no hago nada.
        if (this.viviendas.size()<=0)
        {
            muestraSinDatos();
            return;
        }
        
        indice --;

        indice = (this.validaIndice(indice, this.viviendas)) ? indice : this.viviendas.size()-1;

        this.vivienda = this.viviendas.get(indice);

        this.cargaValores(this.vivienda);

    }//GEN-LAST:event_btAnteriorMouseClicked

    private void btBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btBuscarMouseClicked

        this.vivienda =(Cvivienda) JOptionPane.showInputDialog(this,CVvivienda.SELECCION,CVvivienda.TITULO_MENSAJE,JOptionPane.QUESTION_MESSAGE,null, this.viviendas.toArray(),null);
        
        if(this.vivienda!= null) this.cargaValores(this.vivienda);

    }//GEN-LAST:event_btBuscarMouseClicked

    private void btSiguienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSiguienteMouseClicked
        
        // si no hay datos, no hago nada.
        if (this.viviendas.size()<=0)
        {
            muestraSinDatos();
            return;
        }
        
        indice ++;

        indice = (this.validaIndice(indice, this.viviendas)) ? indice : 0;

        this.vivienda = this.viviendas.get(indice);

        this.cargaValores(this.vivienda);
    }//GEN-LAST:event_btSiguienteMouseClicked

    private void btNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoActionPerformed
        
        this.vivienda =  new Cvivienda();
        this.cargaValores();
        this.modificando = true;
        this.bloqueaCampos(modificando);
        this.cambiaTextoBotones(modificando);
        this.nuevo = true;
        
    }//GEN-LAST:event_btNuevoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CVvivienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CVvivienda().setVisible(true);
            }
        });
    }
    
    private boolean validaIndice(int indice, ArrayList<Cvivienda> lista)
    {
        
        return (indice < (lista.size()) && indice >= 0);
        
    }
    
    
    /**
     * Cargar las viviendas desde la base de datos
     */
    private void cargaDatos()
    {
        
        if (manager.isOpen())
        {

            this.vivienda =null;
            this.viviendas =(ArrayList<Cvivienda>)this.manager.createNativeQuery("select * from viviendas",Cvivienda.class).getResultList();
                        
        }else{
            
            JOptionPane.showMessageDialog(this, VentanaPrincipal.MENSAJE_ERROR,"Error",JOptionPane.WARNING_MESSAGE);
            
            this.dispose();
                    
        }
    }
    
    /**
     * Funcion que carga los valores de la vivienda en el formulario
     */
    private void cargaValores(Cvivienda vivienda)
    {
        
        this.spPrecio.setValue(vivienda.getPrecio());
        this.tfDireccion.setText(vivienda.getDireccion());
        this.tfReferencia.setText(vivienda.getReferencia());
        this.spMetros.setValue(vivienda.getMetros());
        this.spBanyos.setValue(vivienda.getBanyios());
        this.spHabitaciones.setValue(vivienda.getHabitaciones());
        
        this.setAlquilada(vivienda.getAlquilada());
        
    }
    
    /**
     * Funcion que carga los valores por defecto en el formulario
     */
    private void cargaValores()
    {
        
        this.spPrecio.setValue(CVvivienda.PRECIO_MINIMO);
        this.tfDireccion.setText(CVvivienda.SIN_DIRECCION);
        this.tfReferencia.setText(CVvivienda.SIN_REFERENCIA);
        this.spMetros.setValue(CVvivienda.METROS_MIMIMOS);
        this.spBanyos.setValue(CVvivienda.HABITACIONES_MINIMAS);
        this.spHabitaciones.setValue(CVvivienda.HABITACIONES_MINIMAS);
        
        this.setAlquilada(false);
        
    }
    
    
    /**
     * Funcion que cambia los nombres de los botones segun el estado
     * @param modificando variable que nos indica si se esta modificando
     */
    private void cambiaTextoBotones(boolean modificando)
    {
        if (this.modificando)
        {
            this.btCancelar.setText(CANCELAR);
            this.btGuadar.setText(GUARDAR);
            
        }else{
            
            this.btCancelar.setText(SALIR);
            this.btGuadar.setText(MODIFICAR);
            
        }
    }
    
    /**
     * Funcion que activa o desactiva la edicion del formulario 
     * @param sn parametro que activa o desactiva la edicion del formulario
     */
    private void bloqueaCampos(boolean sn)
    {
        
        this.tfDireccion.setEnabled(sn);
        this.tfReferencia.setEnabled(sn);
        this.spMetros.setEnabled(sn);
        this.spBanyos.setEnabled(sn);
        this.spHabitaciones.setEnabled(sn);
        this.spPrecio.setEnabled(sn);
        this.panelBusqueda.setVisible(!sn);
        
        // Cosas que se ocultan
        this.panelBusqueda.setVisible(!sn);
        this.btNuevo.setVisible(!sn);
        this.btBorrar.setVisible(!sn);
          
    }
    
    private void setAlquilada(boolean sn)
    {
        if (sn)
        {
            this.lbAlquilada.setText(ALQUILADA);
            this.lbAlquilada.setForeground(Color.red);
        }else{
            
            this.lbAlquilada.setText(DISPONIBLE);
            this.lbAlquilada.setForeground(Color.green);
        }
            
    }
    
    /**
     * Lanza mensaje que no hay informacion en el ArrayList.
     */
    private void muestraSinDatos()
    {
        JOptionPane.showMessageDialog(this, this.TEXTO_REVISAR + this.NO_HAY_DATOS  , TITULO_MENSAJE, JOptionPane.ERROR_MESSAGE);
    }
    
    
    /**
     * Funcion que permite saber si tiene informacion los campos del formulario
     * @param campo campo a validadar
     * @param cadena cadena por defecto con la que se compara
     * @return si tiene la cadena por defecto o está vacio devuelve falso
     */
    private boolean compruebaCampo(JTextField campo, String cadena)
    {
        boolean resultado =false;
      
        if (cadena.equals(campo.getText()) || campo.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this,this.TEXTO_REVISAR + campo.getToolTipText(), 
                    TITULO_MENSAJE, JOptionPane.ERROR_MESSAGE);
            campo.setForeground(Color.red);
        }else{
            
            campo.setForeground(Color.black);
            resultado=true;
        }
        
        
        return resultado; 
    }
    
    
    /**
     * Funcion que permite saber si tiene informacion los campos del formulario
     * @param campo campo a validadar
     * @param valorMinimo valor con el que se compara
     * @return si tiene el valor por derecto o o está vacio devuelve falso
     */
    private boolean compruebaCampo(JSpinner campo, int valorMinimo)
    {
        boolean resultado =false;
        
        int valor=(int) campo.getValue();
      
        if (valor < valorMinimo)
        {
            JOptionPane.showMessageDialog(this, this.TEXTO_REVISAR + campo.getToolTipText()  , TITULO_MENSAJE, JOptionPane.ERROR_MESSAGE);
            campo.setForeground(Color.red);
            
        }else{
            
            campo.setForeground(Color.black);
            resultado=true;
        }
        
        
        return resultado; 
    }
    
    /**
     * Funcion para grabar los datos en el ArrayList
     */
    private void grabaRegistro()
    {
        
        this.vivienda.setPrecio((int)this.spPrecio.getValue());
        this.vivienda.setBanyios((int)this.spBanyos.getValue());
        this.vivienda.setMetros((int)this.spMetros.getValue());
        this.vivienda.setHabitaciones((int)this.spHabitaciones.getValue());
        this.vivienda.setDireccion(this.tfDireccion.getText());
        this.vivienda.setReferencia(this.tfReferencia.getText());
        
        this.manager.getTransaction().begin();
        
        if (this.nuevo)
            this.manager.persist(vivienda);
        else
            this.manager.refresh(vivienda);
        
        this.manager.getTransaction().commit();
                        
        //JOptionPane.showMessageDialog(this,this.TEXTO_REVISAR + modificando, TITULO_MENSAJE, JOptionPane.ERROR_MESSAGE);

    }
    
    
   
    //variable para saber si estoy modificando
    boolean modificando;
    
    boolean nuevo;
    
    ArrayList<Cvivienda> viviendas;
    
    private EntityManager manager;
       
    int indice;
    
    Cvivienda vivienda;
    
    // Valorares por defecto para los campos
        
    final static String GUARDAR="Guardar";
    final static String MODIFICAR="Modificar";
    
    final static String SALIR="Salir";
    final static String CANCELAR="Cancelar";
    
    
    final static String ALQUILADA="Alquilada";
    final String DISPONIBLE="Disponible";
    
    final static String SELECCION="Seleccione cliente";
    final static String TITULO_MENSAJE="Datos Formulario";
    final String TEXTO_REVISAR="Revise ";
    
    final String TEXTO_BORRAR="¿Está Usted seguro de que desea borrar este registro?";
    final String NO_HAY_DATOS="No hay datos para mostrar";
    
    
    final static String SIN_REFERENCIA="Referencia vivienda";
    final static String SIN_DIRECCION="Dirección de la vivienda";
    static final int METROS_MIMIMOS=30;
    static final int HABITACIONES_MINIMAS=1;
    static final int PRECIO_MINIMO=100;
    
       

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnterior;
    private javax.swing.JButton btBorrar;
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btGuadar;
    private javax.swing.JButton btNuevo;
    private javax.swing.JButton btSiguiente;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jlbBanyos;
    private javax.swing.JLabel lbAlquilada;
    private javax.swing.JLabel lbDireccion;
    private javax.swing.JLabel lbHabitaciones;
    private javax.swing.JLabel lbMetros;
    private javax.swing.JLabel lbPrecio;
    private javax.swing.JLabel lbReferencia;
    private javax.swing.JLabel lbTItulo;
    private javax.swing.JPanel panelBusqueda;
    private javax.swing.JPanel panelCabecera;
    private javax.swing.JPanel panelCuerpo;
    private javax.swing.JPanel panelPie;
    private javax.swing.JSpinner spBanyos;
    private javax.swing.JSpinner spHabitaciones;
    private javax.swing.JSpinner spMetros;
    private javax.swing.JSpinner spPrecio;
    private javax.swing.JTextField tfDireccion;
    private javax.swing.JTextField tfReferencia;
    // End of variables declaration//GEN-END:variables
}
